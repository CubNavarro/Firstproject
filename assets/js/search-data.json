{
  
    
        "post0": {
            "title": "Week 1 Questions",
            "content": "import getpass, sys questions = 3 correct = 0 def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) question_and_answer(&quot;what is your favorite class in school?&quot;) question_and_answer(&quot;Do you like this class?&quot;) question_and_answer(&quot;How has your day been?&quot;) print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_and_answer(&quot;Are you ready for some questions?&quot;) rsp = question_with_response(&quot;Who is the creator of Apple?&quot;) if rsp == &quot;Steve Jobs&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;what is 10+40?&quot;) if rsp == &quot;50&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Is Toby leeder the hotest of them all?&quot;) if rsp == &quot;yes&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Question: what is your favorite class in school? Answer: Math Question: Do you like this class? Answer: yes Question: How has your day been? Answer: good Hello, Caleb running c: Users Caleb AppData Local Programs Python Python310 python.exe You will be asked 3 questions. Question: Are you ready for some questions? Answer: good Question: Who is the creator of Apple? Your mom is incorrect! Question: what is 10+40? your mom is incorrect! Question: Is Toby leeder the hotest of them all? 69 is incorrect! Caleb you scored 0/3 .",
            "url": "https://cubnavarro.github.io/Firstproject/newcode/week%201/2022/10/04/_questions.html",
            "relUrl": "/newcode/week%201/2022/10/04/_questions.html",
            "date": " • Oct 4, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "First Notebook",
            "content": "About . This is my first page. . #collapse-show hello this is a secert message ohohhohohohohohoh . .",
            "url": "https://cubnavarro.github.io/Firstproject/newcode/week%200/2022/10/04/_Notebook.html",
            "relUrl": "/newcode/week%200/2022/10/04/_Notebook.html",
            "date": " • Oct 4, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Lists and Dictionary",
            "content": "My list and dictionary . I switched it up and made some lists and dictionaries . These are just the Questions . questions = [ &quot;What is your first name?&quot;, &quot;How Old are you?&quot;, &quot;What is your favorite food?&quot;, &quot;What is your favorite color?&quot;, &quot;What is your favorite place?&quot;, &quot;who are your friends&quot;, ] print(questions) . [&#39;What is your first name?&#39;, &#39;how Old are you?&#39;, &#39;What is your favorite food?&#39;, &#39;What is your favorite color?&#39;, &#39;What is your favorite place?&#39;, &#39;who are your friends&#39;] . Questions with Answers . These questiona are the ones with answers . print(&quot;What is your first name?&quot;) name = &quot;Big Man Nathan&quot; print(name) print(&quot;How old are you?&quot;) age = &quot;16&quot; print(age) # variable of type integer print(&quot;What is your favorite Food&quot;) food = &quot;Pizza&quot; print(food) print(&quot;How old are you?&quot;) color = &quot;Hot pink&quot; print(color) # variable of type float print(&quot;What is your favoirte place&quot;) place = &quot;Europe&quot; print(place) # variable of type list (many values in one variable) print(&quot;Who are your friends&quot;) friends = &quot;The leader of the friend group, Gene, Caleb&quot; print(friends) # variable of type dictionary (a group of keys and values) print(&quot;Is this you?&quot;) person = { &quot;Your Name&quot;: name, &quot;Your Age&quot;: age, &quot;Favorite Food&quot;: food, &quot;Favorite Place&quot;: place, &quot;Your Friends&quot;: friends } print(person) . What is your first name? Big Man Nathan How old are you? 16 What is your favorite Food Pizza How old are you? Hot pink What is your favoirte place Europe Who are your friends The leader of the friend group, Gene, Caleb Is this you? {&#39;Your Name&#39;: &#39;Big Man Nathan&#39;, &#39;Your Age&#39;: &#39;16&#39;, &#39;Favorite Food&#39;: &#39;Pizza&#39;, &#39;Favorite Place&#39;: &#39;Europe&#39;, &#39;Your Friends&#39;: &#39;The leader of the friend group, Gene, Caleb&#39;} . InfoDb = [] # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;Caleb&quot;, &quot;LastName&quot;: &quot;Navarro&quot;, &quot;age&quot;: &quot;16&quot;, &quot;DOB&quot;: &quot;April 14&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;caleb.evan.navarro@gmail.com&quot;, &quot;Owns_Cars&quot;: [&quot;Bugatti La Voiture Noire&quot;, &quot;Audi A4&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Billy&quot;, &quot;LastName&quot;: &quot;Bob&quot;, &quot;age&quot;: &quot;21&quot;, &quot;DOB&quot;: &quot;December 21&quot;, &quot;Residence&quot;: &quot;Europe&quot;, &quot;Email&quot;: &quot;bigboybilly@gmail.com&quot;, &quot;Owns_Cars&quot;: [&quot;Tesla&quot;] }) InfoDb.append({ &quot;FirstName&quot;: &quot;Nathan&quot;, &quot;LastName&quot;: &quot;Capule&quot;, &quot;age&quot;: &quot;16&quot;, &quot;DOB&quot;: &quot;July 8&quot;, &quot;Residence&quot;: &quot;Star Killer Base&quot;, &quot;Email&quot;: &quot;plrttapotty@gmail.com&quot;, &quot;Owns_Cars&quot;: [&quot;2019 Lamborghini Huracan Performante, Gerald R. Ford-class aircraft carrier, Starship&quot;] }) # Print the data structure print(InfoDb) def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;age:&quot;, d_rec[&quot;age&quot;]) print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop algorithm iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . [{&#39;FirstName&#39;: &#39;Caleb&#39;, &#39;LastName&#39;: &#39;Navarro&#39;, &#39;age&#39;: &#39;16&#39;, &#39;DOB&#39;: &#39;April 14&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;caleb.evan.navarro@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;Bugatti La Voiture Noire&#39;, &#39;Audi A4&#39;]}, {&#39;FirstName&#39;: &#39;Billy&#39;, &#39;LastName&#39;: &#39;Bob&#39;, &#39;age&#39;: &#39;21&#39;, &#39;DOB&#39;: &#39;December 21&#39;, &#39;Residence&#39;: &#39;Europe&#39;, &#39;Email&#39;: &#39;bigboybilly@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;Tesla&#39;]}, {&#39;FirstName&#39;: &#39;Nathan&#39;, &#39;LastName&#39;: &#39;Capule&#39;, &#39;age&#39;: &#39;16&#39;, &#39;DOB&#39;: &#39;July 8&#39;, &#39;Residence&#39;: &#39;Star Killer Base&#39;, &#39;Email&#39;: &#39;plrttapotty@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;2019 Lamborghini Huracan Performante, Gerald R. Ford-class aircraft carrier, Starship&#39;]}] For loop output Caleb Navarro age: 16 Residence: San Diego Birth Day: April 14 Cars: Bugatti La Voiture Noire, Audi A4 Billy Bob age: 21 Residence: Europe Birth Day: December 21 Cars: Tesla Nathan Capule age: 16 Residence: Star Killer Base Birth Day: July 8 Cars: 2019 Lamborghini Huracan Performante, Gerald R. Ford-class aircraft carrier, Starship . import getpass, sys questions = 3 correct = 0 def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) question_and_answer(&quot;How has your day been today?&quot;) question_and_answer(&quot;Do you have friends?&quot;) question_and_answer(&quot;Do you like ice cream&quot;) print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_and_answer(&quot;Are you ready for some questions?&quot;) rsp = question_with_response(&quot;what is 10+6?&quot;) if rsp == &quot;16&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;What many tacos should you eat a day?&quot;) if rsp == &quot;42,069&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;From 1 to 10 how hot is toby?&quot;) if rsp == &quot;69&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Question: How has your day been today? Answer: Question: Do you have friends? Answer: Question: Do you like ice cream Answer: Hello, Caleb running c: Users Caleb AppData Local Programs Python Python310 python.exe You will be asked 3 questions. Question: Are you ready for some questions? Answer: Question: what is 10+6? is incorrect! Question: What many tacos should you eat a day? is incorrect! Question: From 1 to 10 how hot is toby? is incorrect! Caleb you scored 0/3 .",
            "url": "https://cubnavarro.github.io/Firstproject/newcode/week%202/2022/10/04/_Lists.html",
            "relUrl": "/newcode/week%202/2022/10/04/_Lists.html",
            "date": " • Oct 4, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "My Bash And Tools Setup",
            "content": "echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/APCSP # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/nighthawkcoders/APCSP.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . The kernel failed to start as a dll could not be loaded. Click &lt;a href=&#39;https://aka.ms/kernelFailuresDllLoad&#39;&gt;here&lt;/a&gt; for more info. . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project pwd echo &quot;&quot; echo &quot;list top level or root of files with project pulled from github&quot; ls echo &quot;&quot; echo &quot;list again with hidden files pulled from github&quot; ls -a # hidden files flag, many shell commands have flags echo &quot;&quot; echo &quot;list all files in long format&quot; ls -al # all files and long listing . echo &quot;Look for posts&quot; export posts=$project/_posts # _posts inside project cd $posts # this should exist per fastpages pwd # present working directory ls -l # list posts . The kernel failed to start as a dll could not be loaded. Click &lt;a href=&#39;https://aka.ms/kernelFailuresDllLoad&#39;&gt;here&lt;/a&gt; for more info. . echo &quot;Look for notebooks&quot; export notebooks=$project/_notebooks # _notebooks is inside project cd $notebooks # this should exist per fastpages pwd # present working directory ls -l # list notebooks . The kernel failed to start as a dll could not be loaded. Click &lt;a href=&#39;https://aka.ms/kernelFailuresDllLoad&#39;&gt;here&lt;/a&gt; for more info. . echo &quot;Look for images in notebooks, print working directory, list files&quot; cd $notebooks/images # this should exist per fastpages pwd ls -l . The kernel failed to start as a dll could not be loaded. Click &lt;a href=&#39;https://aka.ms/kernelFailuresDllLoad&#39;&gt;here&lt;/a&gt; for more info. . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project echo &quot;show the contents of README.md&quot; echo &quot;&quot; cat README.md # show contents of file, in this case markdown echo &quot;&quot; echo &quot;end of README.md&quot; . The kernel failed to start as a dll could not be loaded. Click &lt;a href=&#39;https://aka.ms/kernelFailuresDllLoad&#39;&gt;here&lt;/a&gt; for more info. . echo &quot;Show the shell environment variables, key on left of equal value on right&quot; echo &quot;&quot; env . The kernel failed to start as a dll could not be loaded. Click &lt;a href=&#39;https://aka.ms/kernelFailuresDllLoad&#39;&gt;here&lt;/a&gt; for more info. . cd $project echo &quot;&quot; echo &quot;show the secrets of .git&quot; cd .git ls -l echo &quot;&quot; echo &quot;look at config file&quot; cat config . The kernel failed to start as a dll could not be loaded. Click &lt;a href=&#39;https://aka.ms/kernelFailuresDllLoad&#39;&gt;here&lt;/a&gt; for more info. . python --version python2 --version . The kernel failed to start as a dll could not be loaded. Click &lt;a href=&#39;https://aka.ms/kernelFailuresDllLoad&#39;&gt;here&lt;/a&gt; for more info. . conda list . The kernel failed to start as a dll could not be loaded. Click &lt;a href=&#39;https://aka.ms/kernelFailuresDllLoad&#39;&gt;here&lt;/a&gt; for more info. . echo Conda Check # test for a kernel installation test=&quot;jupyter&quot; # keyword check=`conda list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . The kernel failed to start as a dll could not be loaded. Click &lt;a href=&#39;https://aka.ms/kernelFailuresDllLoad&#39;&gt;here&lt;/a&gt; for more info. . jupyter --version jupyter kernelspec list . The kernel failed to start as a dll could not be loaded. Click &lt;a href=&#39;https://aka.ms/kernelFailuresDllLoad&#39;&gt;here&lt;/a&gt; for more info. . test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . The kernel failed to start as a dll could not be loaded. Click &lt;a href=&#39;https://aka.ms/kernelFailuresDllLoad&#39;&gt;here&lt;/a&gt; for more info. .",
            "url": "https://cubnavarro.github.io/Firstproject/techtalk/bash",
            "relUrl": "/techtalk/bash",
            "date": " • Oct 4, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Grimsley Pc1 Spring 2022 Calendar",
            "content": "Trig Graph Paper . Unit 1 . 1 March 7 . Minimum Day! . Intro to class! . HW . ☐Attitude &amp; Interest Survey . ☐Get a graph paper notebook! :) . 8 . A1 . Radians- Define &amp; Identify . Learning Goal: I will be able to evaluate with radians. . Class Slides . A1 HW . ☐#1-6 Answers . ☐Attitude &amp; Interest Survey . ☐ Print Trig Graph Paper . 9 . A2 . Radians- Evaluate &amp; Graph . Learning Goal: I will be able to evaluate and graph in radians. . Class Slides . A2 HW . ☐ #1-10 Answers . 10 . A3 . Solve with Radians . Learning Goal: I will be able to solve with radians. . Class Slides . Around the World . A3 HW . ☐ #1-9 Answers . 11 . A4 . Reciprocal Functions &amp; Radian Wrap Up . Learning Goal: I will be able to evaluate with reciprocal functions. . Class Slides . Stations . A4 HW . ☐ #1-10 Answers . . 2 | 14 . A5 . Pythagorean Identities . Learning Goal: I will be able to discover and use the pythagorean identities. . Class Slides . A5 HW . ☐ Trig… foundation #1, 5, 9,..,37 Answers . | 15 . A6 . Pythagorean Identities . Learning Goal: I will be able to use the pythagorean identities to simplify. . Class Slides . A6 HW . ☐ Take home radians ‘quiz’ - take it as if it were a real quiz!! Must bring tomorrow . | 16 . A7 . Prep for Quiz 1! . Learning Goal: I will be able to use the pythagorean identities to simplify. . Class Slides . A7 HW . ☐ #1(all), #3(all), #5(b &amp; c), #9-17 odds . Answers . | 17 . A8 . Quiz 1! . Study Guide . Then Sum &amp; Difference Identities :-) . Learning Goal: I will demonstrate my learning thus far. &amp; I will know why we need Sum &amp; Difference Identities! . Class Slides . A8 HW . ☐Pick 5 problems: . Iconic Identities 1 Answers . | 18 . A9 . Sum &amp; Difference Identities . Learning Goal: I will be able to use the sum and difference identities to evaluate trig functions. . Class Slides . Rally Coach Key . A9 HW . ☐ Trig… foundation #4, 12, 14, 20, 22, 28, 30, 36, 38 . Answers . | . 3 | 21 . A10 . Double Angle Identities . Learning Goal: I will be able to use double angle identities. . Class Slides . A10 HW . ☐page 321 #21 . Answers . page 383 #5, 13, 17 . Answers . | 22 . A11 . Solving with csc/sec/cot . Learning Goal: I will be able to solve with secant, cosecant, and cotangent. . Class Slides . A11 HW . ☐ Pick 5 problems: . Iconic Identities 1 Answers . | 23 . A12 . Radians &amp; Identities Practice . Learning Goal: I will be able to use radians and trig identities to simplify. . Class Slides . A12 HW . ☐#1-7 Answers . Skip #2!! . | 24 . A13 . Graphing csc/sec/cot . Learning Goal: I will be able to graph csc, sec, and cot. . Class Slides . A13 HW . ☐ Pick 10 problems: . 6 Trig Functions (don’t do #15-20) Answers . | 25 . A14 . Practice . (Make this the last day with your identity reference sheet!) . Classwork will be collected Monday! Full credit for correct answers with all work shown. . Resource Page . Resource Page Key . A14 HW . ☐ Finish classwork . | . 4 | 28 . A15 . Formative ‘Quiz’- Free Chance to Make Mistakes . (not for points- don’t stress) . Learning Goal: I will know what I need to study for Test 1. . Blank FCTMM . Key . Class Slides . A15 HW . ☐ Trig Identities Wkst #2-8 evens, 22-34 evens . ☐Study identities! . | 29 . A16 . Review for Test 1 . (no identities reference sheet!) . Learning Goal: I will review what I have learned in Unit A. . Class Slides . A16 HW . ☐ Pick 5 problems: . Iconic Identities 1 Answers . ☐ Study identities &amp; for Test 1! . | 30 . B1 . Last Day to Submit A Unit Late Work! . Graphing Double Angles . Learning Goal: I will be able to graph sine, cosine, and tangent involving double angles. . Class Slides . B1 HW . ☐ Study for Test 1! . | 31 . Test 1! . (no identities reference sheet!) . Test 1 Study Guide . | April 1 . B2 . Graphing Triple Angles . Learning Goal: I will be able to graph, sine, cosine, and tangent involving double and triple angles. . Class Slides . B2 HW . ☐ Test 1 Reflection . ☐Test key (so you can see how you did!) . ☐ Have a great weekend :) . | . Unit 2 . 5 4 . B3 . Solving Trig Equations with Algebra . Learning Goal: I will be able to solve trig equations with algebra. . Class Slides . B3 HW . ☐Extreme…Trig Style #5, 7, 11, 17, 24, 26 . Answers . 5 . B4 . Solving with Trig Identities . Learning Goal: I will be able to solve trig equations using trig identities. . Class Slides . Four Corners Key . B4 HW . ☐ Double &amp; Triple Angles . GRAPH ONLY: #2, 4, 7 &amp; 8 . Answers . 6 . B5 . Solving Double Angles &amp; Triple Angles . Learning Goal: I will be able to solve trig equations with double and triple angles. . Class Slides . Resource Page Key . B5 HW . ☐ Double &amp; Triple Angles . SOLVE #2, 4, 7 &amp; 8 . GRAPH #1 and 5 . Answers . 7 . B6 . Modeling with Trig Functions . Learning Goal: I will be able to use trig functions to model real world scenarios. . Class Slides . Resource Page Key . B6 HW . ☐ Simplifying vs. Solving ‘Quiz’ . ☐ Test 1 Corrections due Wed. April 20 . 8 . B7 . Solving Review . Learning Goal: I will be able to solve trig equations using a variety of methods. . Quizizz &amp; Key . B7 HW . ☐ none . Have a great spring break :) . . | 11 . Spring Break . Woo hoo! . | 12 | 13 | 14 | 15 | . 6 | 18 . B8 . Formative ‘Quiz’- Free Chance to Make Mistakes . Learning Goal: I will show myself what I know and what I need to study for Test 2. . FCTMM &amp; Key . B8 HW . ☐ Simplifying Practice Makes Perfect #9, 13, 15, 17 Answers . Extreme…Trig Style #4, 8, 10 Answers . ☐Test 1 Corrections due Wed. April 20 . | 19 . B9 . Test 2 Review . Learning Goal: I will know what I need to study for Test 2. . Class Slides (with word scramble problems &amp; key) . B9 HW . ☐ Study for Test 2! (we recommended to re-do problems from test 1, quizzes, and HW!) . | 20 . Test 2 . Part 1! . Test 2 Study Guide . (no identities reference sheet!) . Last Day to Submit Unit B latework!! . C1 . Right Triangles in the Coordinate Plane . Learning Goal: I will be able to use right triangles and given trig info to find missing trig info . Class Slides . C1 HW . ☐ Study for Test 2! . | 21 . Test 2 . Part 2! . Test 2 Study Guide . (no identities reference sheet!) . | 22 . C2 . Solving Over Different Domains . Learning Goal: I will be able to solve trig functions over different domains. . Resource Page . Key . C2 HW . ☐ Trig Love Triangles part 1 . Answers . ☐Trig Identities Wskt #37 Answers . due tuesday . | . Unit 3 . 7 25 . C3 . Even &amp; Odd Vocab . Learning Goal: I will be able to determine if a function is even or odd. . Resource Page . Key . C3 HW . ☐ Trig Love Triangles part 1 . Answers . ☐Trig Identities Wskt #37 Answers . Due tomorrow . 26 . C4 . Defining Inverse Trig Functions . Learning Goal: I will be able to define and graph inverse trig functions. . Class Slides . C4 HW . ☐ Iconic Identities part 2 #13-16, 30-35 . 27 . C5 . Evaluating Inverse Trig Functions . Learning Goal: I will be able to evaluate with inverse trig functions. . Resource Page . RP key . C5 HW . ☐ Evaluate #1-8 . Solve/Simplify #9-10 . Answers . 28 . C6 . Describing Graphs . Learning Goal: I will be able to completely describe trig graphs using appropriate vocabulary. . Desmos . C6 HW . ☐ Vocabulary with Trig Functions (page 2) . Answers . 29 . C7 . Simplifying Monomials . Learning Goal: I will be able to simplify monomials. . Class Slides . C7 HW . ☐ Solving Over Different Domain . Answers . . 8 | May 2 . C8 . Simplifying Binomials &amp; Polynomials . Learning Goal: I will be able to simplify binomials &amp; polynomials. . Class Slides . C8 HW . ☐Page 178 #1a&amp;b, 3a&amp;b, 5a&amp;b, 7-13 odds, 17-27 odds . Answers . ☐ Test 2 Corrections due Friday . | 3 . C9 . Simplifying Complex Rational Expressions . Learning Goal: I will be able to simplify complex rational expressions. . Class Slides . C9 HW . ☐Simplifying...Expert Level #1-5, 35-40 . Answers . ☐ Test 2 Corrections due Friday . | 4 . C10 . Simplifying Roots with Absolute Value . Learning Goal: I will be able to simplify expressions using laws related to roots. . Class Slides . Card Sort . Card Sort Answers . C10 HW . ☐Solving…Trig Style #4-9 . ☐ Test 2 Corrections due Friday . | 5 . C11 . Team Quiz . Topics . C11 HW . ☐ Test 2 Corrections due tomorrow! . | 6 . C12 . Calculus Readiness Check! . Learning Goal: I will refine my algebra skills that are prerequisites for calculus. . Class Slides . Desmos Per 1 . Desmos Per 2 . Key . C12 HW . ☐ Finish desmos activity in your notebook! . (will check it Tues. morning, but you will also have HW mon night so budget time :)) . | . 9 | 9 . C13 . Factoring with Fractional Exponents . Learning Goal: I will be able to factor expressions with fractional exponents. . Class Slides . C13 HW . ☐Simplifying...Expert Level #6-12, 50-52 . Answers . ☐ Finish Desmos from Fri, 5/6 . ☐ Team Quiz Corrections due tomorrow . | 10 . C14 . Solving by Factoring . Learning Goal: I will be able to solve equations using factoring techniques. . Class Slides . C14 HW . ☐ Simplifying Identities... #4-10 . Answers . | 11 . C15 . Solving with Exponents . Learning Goal: I will be able to solve with rational exponents. . Class Slides . C15 HW . ☐ Solving...Expert Level #1-10 . Answers . | 12 . C16 . Solving with e and ln . Learning Goal: I will be able to solve equations using e and ln. . Class Slides . C16 HW . ☐ Page 196 #36b, 37b, 38b, 40b . Page 200 #30a&amp;b, 32b, 33b, 34b . Answers . | 13 . C17 . Application of e . Learning Goal: I will be able to apply e to a real world scenario. . Class Slides . C17 HW . ☐Simplifying...Expert Level #13-16, 21-24 . Answers . | . Unit 4 . 10 16 . C18 . FCTMM Bingo . Learning Goal: I will self assess my readiness for Test 3. . FCTMM . Key . C18 HW . REQUIRED: . ☐ Solving...Expert Level #12-19 (Pick 4) . Answers . ☐Correct FCTMM in a different color pen &amp; write reflection!! . STRONGLY RECOMMENDED: . ☐Solving..Expert ^^ #12-19 ALL . ☐ Modeling Practice . 17 . C19 . Last Day to Submit Unit C late work!! . Test 3 Review . Learning Goal: I will know what I need to study for Test 3. . Resource Page . RP Key . Modeling Practice . Modeling Key . C19 HW . ☐ Study for Test 3 . Use past tests, FCTMMs, quizzes, team quiz, CW, HW, etc. !!! . 18 . Test 3 . Part 1! . No calc . Test 3 Topics . 19 . Test 3 . Part 2! . Calc OK . Test 3 Topics . 20 . D1 . Solving Systems . Learning Goal: I will be able to solve systems of equations algebraically and graphically. . Class Slides . Resource Page . Key . D1 HW . ☐ Solving...Expert Level #11-20 Answers . Due tuesday :-) . . 11 | 23 . D2 . Solving Systems . Learning Goal: I will be able to solve systems of equations algebraically and graphically. . Resource Page . Key . D2 HW . ☐ Solving...Expert Level #22-32 . | 24 . D3 . Symmetry &amp; Even Functions . Learning Goal: I will be able to apply transformations to a function, f(x), and determine if a function has symmetry. . Class Slides . Resource Page . Key . D3 HW . ☐More Algebra Review choose 10 from #1-12, 19-30 . Answers . Due Thursday :) . | 25 . D4 . More Transformations &amp; Symmetry . Learning Goal: I will be able to perform more challenging transformations, &amp; justify algebraically if there is symmetry. . Class Slides . Resource Page . Key . D4 HW . ☐ Start Test 3 Corrections due Tuesday 5/31! . | 26 . D5 . Piecewise Graphs . Learning Goal: I will be able to graph piecewise functions . Class Slides . Resource Page . Key . D5 HW . ☐ Piecewise Functions pick 5 . Answers . ☐ Test 3 Corrections due Wed, 6/1! . | 27 . D6 . Algebra Review . Learning Goal: I will be able to simplify complex expressions. . Class Slides . D6 HW . ☐ Fractional and Negative Exponents . #5-10, 13, 14, 17, 25, 31 . ☐ Test 3 Corrections due Wed, 6/1! . | . 12 | 30 . Memorial Day . No School . | 31 . D7 . Graphing Review . Learning Goal: I will reflect on my abilities to describe and transform graphs. . Class Slides . Resource Page . Key . D7 HW . ☐ Test Corrections due 6/1 . ☐ Ex. Cr. due on Canvas Thursday @11:59pm . | June 1 . D8 . Algebra Review . Learning Goal: I will reflect on my abilities to simplify, factor, and solve algebraic expressions. . Class Slides . D8 HW . ☐Simplifying...Expert Level pick 5 . Solving...Expert Level pick 5 . ☐ Ex. Cr. due tomorrow . | 2 . D9 . Trig Review . Learning Goal: I will reflect on my abilities to evaluate, simplify, and solve with trig. . Class Slides . Stations . D9 HW . ☐ Study for your final . ☐ Optional Ex. Cr. due on Canvas tonight @11:59pm . | 3 . D10 . Final, Final Review . Learning Goal: I will practice a variety of skills for my final. . Class Slides . D10 HW . ☐Study for your final . | . 13 | 6 . Final Part 1 . Test 4 Topics . | 7 . Finals Week . (period 5) . Test 4 Topics . Classwork: . Class Survey . AP Calc Info . Fun Option: . Escape Room . | 8 . Finals Week . (periods 1-2) . Test 4 Topics . | 9 . Finals Week . (periods 3-4) . Test 4 Topics . | Happy Summer :) | .",
            "url": "https://cubnavarro.github.io/Firstproject/2022/10/04/Grimsley-PC1-Spring-2022-Calendar.html",
            "relUrl": "/2022/10/04/Grimsley-PC1-Spring-2022-Calendar.html",
            "date": " • Oct 4, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Big Idea 1",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Here are some code segments you can practice fixing: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i + 1) + &quot; letter in the alphabet&quot;) i += 1 . The letter a is the 1 letter in the alphabet . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) count = 1 for i in alphabetList: if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count) + &quot; letter in the alphabet&quot;) count += 1 . The letter b is the 2 letter in the alphabet . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . evens = [] i = 1 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [1, 3, 5, 7, 9] . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] i = 0 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [0, 2, 4, 6, 8, 10] . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 1): evens.append(numbers[i]) print(evens) . [1, 3, 5, 7, 9] . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 0 while i &lt; 100: numbers.append(i) i += 1 for i in numbers: if (numbers[i] % 5 == 0 or numbers[i] % 2 == 0): newNumbers.append(numbers[i]) print(newNumbers) . [0, 2, 4, 5, 6, 8, 10, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 94, 95, 96, 98] . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . menu = {&quot;pizza&quot;: 8.99, &quot;garlic knots&quot;: 2.99, &quot;soda&quot;: 1.99, &quot;lava cake&quot;: 3.50, &quot;salad&quot;: 4.99} total = 0 more = 1 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times def newItem(total): m = 1 addTo = 0 item = input(&quot;What would you like to eat&quot;).lower() while (m == 1): for i in menu.keys(): if item == i: addTo = menu.get(item) if addTo != 0: return addTo else: item = input(&quot;We do not have that Sorry!&quot;).lower(), m = 1 total += newItem(total) while (more == 1): answer = input(&quot;Would you like more food&quot;).lower() if answer == &quot;yes&quot; or answer == &quot;Yes&quot; or answer == &quot;y&quot; or answer == &quot;Y&quot;: total += newItem(total) elif answer == &quot;no&quot; or answer == &quot;No&quot; or answer == &quot;N&quot; or answer == &quot;n&quot;: more = 0 else: print(&quot;Please only use yes or no&quot;) #code should add the price of the menu items selected by the user print(&quot;$&quot; + str(total)) . Menu pizza $8.99 garlic knots $2.99 soda $1.99 lava cake $3.5 salad $4.99 Please only use yes or no $17.47 . n1 = total n2 = 0.075 res = n1 * n2 Finalcost = (res +total) print(&quot;Your total is&quot;, Finalcost) . Your total is 18.78025 . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | .",
            "url": "https://cubnavarro.github.io/Firstproject/week%207/2022/10/03/AP-error_testing.html",
            "relUrl": "/week%207/2022/10/03/AP-error_testing.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Java Script",
            "content": "function logIt(output) { console.log(output); } . function logItType(output) { console.log(typeof output, &quot;;&quot;, output); } . // define a function to hold data for a Person function Person(name, ghID, classOf, School) { this.name = name; this.ghID = ghID; this.classOf = classOf; this.role = &quot;&quot;; this.School = School; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } Person.prototype.setSchool = function(School){ this.School = School; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, ghID: this.ghID, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable teacher var teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977); // object type is easy to work with in JavaScript teacher.setRole(&quot;teacher&quot;) logItType(teacher); // before role logItType(teacher.toJSON()); // ok to do this even though role is not yet defined // Add myself as a new person var caleb = new Person(&quot;Caleb&quot;, &quot;CubNavarro&quot;, 2024); caleb.setRole(&quot;Coolguy&quot;) caleb.setSchool(&quot;Del Norte&quot;) logItType(caleb); // output of Object and JSON/string associated with Teacher teacher.setRole(&quot;Teacher&quot;); // set the role teacher.setSchool(&quot;Del Norte&quot;) logItType(teacher); logItType(teacher.toJSON()); . object ; Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;teacher&#39;, School: undefined } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;teacher&#34;} object ; Person { name: &#39;Caleb&#39;, ghID: &#39;CubNavarro&#39;, classOf: 2024, role: &#39;Coolguy&#39;, School: &#39;Del Norte&#39; } object ; Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39;, School: &#39;Del Norte&#39; } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;Teacher&#34;} . var students = [ new Person(&quot;Toby&quot;, &quot;Tobyleeder&quot;, 2024, &quot;Del Norte&quot;), new Person(&quot;Nathan&quot;, &quot;Nathan-Capule&quot;, 2024, &quot;Del Norte&quot;), new Person(&quot;Gene&quot;, &quot;Gene&quot;, 2024, &quot;Del Norte&quot;), new Person(&quot;Theo&quot;, &quot;Theothegreat&quot;, 2024, &quot;Del Norte&quot;), new Person(&quot;Caden&quot;, &quot;cadenthebot&quot;, 2024, &quot;Del Norte&quot;), ]; // define a classroom and build Classroom objects and json function Classroom(teacher, students){ // 1 teacher, many student // start Classroom with Teacher teacher.setRole(&quot;Teacher&quot;); teacher.setSchool(&quot;Del Norte&quot;) this.teacher = teacher; this.classroom = [teacher]; // add each Student to Classroom this.students = students; this.students.forEach(student =&gt; { student.setRole(&quot;Student&quot;); this.classroom.push(student); }); // build json/string format of Classroom this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci classroom from formerly defined teacher and students compsci = new Classroom(teacher, students); // output of Objects and JSON in CompSci classroom logItType(compsci.classroom); // constructed classroom object logItType(compsci.classroom[0].name); // abstract 1st objects name logItType(compsci.json[0]); // show json conversion of 1st object to string logItType(JSON.parse(compsci.json[0])); // show JSON.parse inverse of JSON.stringify . object ; [ Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39;, School: &#39;Del Norte&#39; }, Person { name: &#39;Toby&#39;, ghID: &#39;Tobyleeder&#39;, classOf: 2024, role: &#39;Student&#39;, School: &#39;Del Norte&#39; }, Person { name: &#39;Nathan&#39;, ghID: &#39;Nathan-Capule&#39;, classOf: 2024, role: &#39;Student&#39;, School: &#39;Del Norte&#39; }, Person { name: &#39;Gene&#39;, ghID: &#39;Gene&#39;, classOf: 2024, role: &#39;Student&#39;, School: &#39;Del Norte&#39; }, Person { name: &#39;Theo&#39;, ghID: &#39;Theothegreat&#39;, classOf: 2024, role: &#39;Student&#39;, School: &#39;Del Norte&#39; }, Person { name: &#39;Caden&#39;, ghID: &#39;cadenthebot&#39;, classOf: 2024, role: &#39;Student&#39;, School: &#39;Del Norte&#39; } ] string ; Mr M string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;Teacher&#34;} object ; { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; } . // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;GitHub ID&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Class Of&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;School&quot; + &quot;&lt;/mark&gt;&lt;th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row of compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.ghID + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.classOf + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.School + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); } // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameGitHub IDClass OfRoleSchool&lt;/tr&gt;Mr M | jm1021 | 1977 | Teacher | Del Norte | Toby | Tobyleeder | 2024 | Student | Del Norte | Nathan | Nathan-Capule | 2024 | Student | Del Norte | Gene | Gene | 2024 | Student | Del Norte | Theo | Theothegreat | 2024 | Student | Del Norte | Caden | cadenthebot | 2024 | Student | Del Norte | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . . .",
            "url": "https://cubnavarro.github.io/Firstproject/week%205/2022/09/23/java.html",
            "relUrl": "/week%205/2022/09/23/java.html",
            "date": " • Sep 23, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Performance Task",
            "content": "My ideas . A online store for trading, selling, or buying acounts on videogames, this includes, fortnite, Minecraft, roblox, CSGO, Call of Duty . | More ideas are coming . | Things to Consider . Copying other Apps . I have to make my game different enough from other games but simular in a way that makes it really cool to play bringing in people and customers to make money to keep creating and expanding the game. . Plagiarism . Not to just make an exact copy of a game this will just look bad and can get sued and will not be your own game .",
            "url": "https://cubnavarro.github.io/Firstproject/week%203/2022/09/12/Performance.html",
            "relUrl": "/week%203/2022/09/12/Performance.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "App Lab Plan",
            "content": "Code.org Quiz . Quiz . Subject . I really didn’t have a plan or Subject for the Quiz and just did a bunch od random Questions. . Questions . Who is this? | Who is this? | What Logo is this? | Coding . I mainly used the onEvent block to signify when a button was clicked it would tell you if the answer was right or the quesrtion was correct. I used comments to split up code and signify which parts for which of the quiz. .",
            "url": "https://cubnavarro.github.io/Firstproject/week%203/2022/09/12/AppLabPlan.html",
            "relUrl": "/week%203/2022/09/12/AppLabPlan.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "My Class schedule",
            "content": "Class Schedule . Period 1 Period 2 Period 3 Period 4 Period 5 . AP calc | Ceramics | APCSP | HPE | Spanish | .",
            "url": "https://cubnavarro.github.io/Firstproject/newcode/week%202/2022/09/06/Table.html",
            "relUrl": "/newcode/week%202/2022/09/06/Table.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Scrum Process",
            "content": "Our Idea . Our idea is to make the game chess and have two differnet game modes one with regulr chess and one with a customizeable game where you can pick your pieces . Group Memebers . Scrum Master - Toby . Frontend - Nathan . Backend - Caleb . Dev ops - Gene . Jobs . Scrum Master makes sure the group is on task and that everyone is working on the correct part and the work is up to standard. . Frontend makes sure the visual appearance is good and more on the . Upfront things you see. Backend works more on the back end code . Dev Ops makes sure the code is correct and making sure pushed code is correct and is working. Also .",
            "url": "https://cubnavarro.github.io/Firstproject/week%205/2022/09/06/ScrumProcess.html",
            "relUrl": "/week%205/2022/09/06/ScrumProcess.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Nathan's Car",
            "content": "This is Nathan’s Car . .",
            "url": "https://cubnavarro.github.io/Firstproject/pictures/week%201/2022/08/31/Nathan'sCar.html",
            "relUrl": "/pictures/week%201/2022/08/31/Nathan'sCar.html",
            "date": " • Aug 31, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "The Mega Duck",
            "content": "This is the mega hot duck . . .",
            "url": "https://cubnavarro.github.io/Firstproject/pictures/week%201/2022/08/31/GifDuck.html",
            "relUrl": "/pictures/week%201/2022/08/31/GifDuck.html",
            "date": " • Aug 31, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://cubnavarro.github.io/Firstproject/example/week%200/2020/02/20/test.html",
            "relUrl": "/example/week%200/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post14": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://cubnavarro.github.io/Firstproject/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "Vocabulary",
          "content": "Vocab Page . Markdown - A coding language for text . HTML - Hyper Text Markup Language . def - indicates the terms being defined with the next sentence . Function - A block of code and when it is ran it is called a function . if statement - if is a conditional statement . Conditional - a set of code that is used if a requirment is met . Jekyll - A language used for some part of fastpages . Liquid - A language used to build the tags page .",
          "url": "https://cubnavarro.github.io/Firstproject/vocab/",
          "relUrl": "/vocab/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "About Me",
          "content": "Hello my name is Caleb Navarro this is my about me page and has cool information yeaaaaaaaa . I am in 11 grade at Del Norte High School and I am on the Varsity waterpolo team and in the robotics club. I love to hangout with my friends and enjoy playing videogames. .",
          "url": "https://cubnavarro.github.io/Firstproject/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://cubnavarro.github.io/Firstproject/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}